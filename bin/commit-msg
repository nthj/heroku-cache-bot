#!/usr/bin/env ruby
#
# An example hook script to prepare the commit log message.
# Called by "git commit" with the name of the file that has the
# commit message, followed by the description of the commit
# message's source.  The hook's purpose is to edit the commit
# message file.  If the hook fails with a non-zero status,
# the commit is aborted.
#
# To enable this hook, rename this file to "prepare-commit-msg".

# If we changed app/assets/, app/views, or vendor/assets,
# append "#bust" to the commit message

WATCHED_DIRECTORIES = %w(app/assets app/views vendor/assets).join(' ')

always_bust_cache         = `git config --list | grep always-cache-bust`
watched_directory_changes = `git diff --cached #{WATCHED_DIRECTORIES}`

message_file = ARGV[0]
message      = File.
  read(message_file).
  gsub(/^#.*/, '').
  strip

# Already asked us to bust the cache? We're done here
exit if message.include?('#bust')
exit if message.length.to_i.zero?

if [always_bust_cache, watched_directory_changes].any? { |v| v.split("\n").length > 0 }
  message = message.insert(message.index("\n") || message.length, ' #bust')
end

File.open(message_file, 'w') { |f| f.write message }
